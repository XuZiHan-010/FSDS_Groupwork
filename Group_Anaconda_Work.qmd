---
bibliography: bio.bib
csl: harvard-cite-them-right.csl
title: Group Anaconda's Group Project
execute:
  echo: false
format:
  html:
    theme:
      - minty
      - css/web.scss
    code-copy: true
    code-link: true
    toc: true
    toc-title: On this page
    toc-depth: 2
    toc_float:
      collapsed: false
      smooth_scroll: true
  pdf:
    include-in-header:
      text: |
        \addtokomafont{disposition}{\rmfamily}
    mainfont: Spectral
    sansfont: Roboto
    monofont: JetBrainsMono-Regular
    papersize: a4
    geometry:
      - top=25mm
      - left=40mm
      - right=30mm
      - bottom=25mm
      - heightrounded
    toc: false
    number-sections: false
    colorlinks: true
    highlight-style: github
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.15.2
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

## Declaration of Authorship {.unnumbered .unlisted}

We, [Anaconda], confirm that the work presented in this assessment is our own. Where information has been derived from other sources, we confirm that this has been indicated in the work. Where a Large Language Model such as ChatGPT has been used we confirm that we have made its contribution to the final submission clear.

Date:19/12/2023

Student Numbers: 23109051, 23140058, 23049578, 23075632, 23035207 

## Brief Group Reflection

| What Went Well                     | What Was Challenging |
| --------------                     | -------------------- |
| Rational division of tasks         | Effective Communication |
| Comprehensive resource collection  | Detailed project schedule |

## Priorities for Feedback

Are there any areas on which you would appreciate more detailed feedback if we're able to offer it?
We really want to know what kind of maps can be added to Question 7 that will be more beneficial to our research (such as the types of pictures and independent and dependent variables) according to our research questions?

```{=html}
<style type="text/css">
.duedate {
  border: dotted 2px red; 
  background-color: rgb(255, 235, 235);
  height: 50px;
  line-height: 50px;
  margin-left: 40px;
  margin-right: 40px
  margin-top: 10px;
  margin-bottom: 10px;
  color: rgb(150,100,100);
  text-align: center;
}
</style>
```

{{< pagebreak >}}

# Response to Questions

## 1. Who collected the data? 

Our Airbnb listing data and geographical boundary data are from Inside Airbnb, which is a non-commercial database constructed by Murray Cox. And our long-term housing rental data is from London Datastore updated by Valuation Office Agency (VOA).

## 2. Why did they collect it? 

Inside Airbnb collects data to understand the impact of Airbnb short-term rentals on local neighborhoods and real estate markets [4]. It aims to inform research, policy decisions, and public understanding of the sharing economy. And the VOA collected the long-term housing rental data to produce reports and statistics, including the Index of Private Housing Rental Prices (IPHRP) through providing data to government and other stakeholders, and support economic research and analysis.

```{python}
print(f"Data frame is {df.shape[0]:,} x {df.shape[1]:,}")
```

ax = df.host_listings_count.plot.hist(bins=50);
ax.set_xlim([0,500]);

## 3. How was the data collected? 

Inside Airbnb collected data on London's Airbnb listings by scraping the Airbnb website once a month. This means that they used software to automatically gather information from the website, such as the number of listings, the type of properties, and the prices. This data was then cleaned and analyzed to produce insights into the Airbnb market in London. While the Valuation Office Agency collects long-term housing rental data from a variety of sources, through rent data directly from landlords and letting agents, sample of rental properties, property transactions and the National Landlord Register. 


## 4. How does the method of collection impact the completeness and/or accuracy of its representation of the process it seeks to study, and what wider issues does this raise? 

While both the Valuation Office Agency (VOA)'s data and Inside Airbnb's dataset have been widely used by researchers, their data collection method can be subjected to limitations:

Airbnb's scraping method may only capture a partial portion of rental properties. This can result in an incomplete representation of the overall rental market. Additionally, the data collection process may experience delays in gathering and processing the data, affecting its accuracy for near-term analysis. Furthermore, outliers in the data may skew the average rental prices, making the data less reliable.

VOA's data collection method may have availability lags, as data is typically released quarterly or annually, delaying its availability for analysis. Moreover, some landlords or letting agents may not report accurately, introducing gaps or inaccuracies in the data. Another limitation is geographic variability, where data representativeness varies across regions and property types. Finally, integrating data from multiple sources can introduce inconsistencies, further reducing the reliability of the data.

## 5. What ethical considerations does the use of this data raise? 

Privacy and Informed Consent: The data collected by Inside Airbnb and VOA includes sensitive information about individuals, such as their names, addresses, and property details. This information could be used to identify and target individuals, or to discriminate against them. The ethical principle of informed consent should be applied for how users’ data are collected, processed, and shared.

Community Impact and Gentrification: Scholarly analysis should extend to the broader societal impact of short-term and long-term housing on local communities. Ethical considerations include investigating whether the platform contributes to gentrification, alters the local housing landscape, and affects the socioeconomic fabric of neighborhoods.

Regulatory Compliance and Legal Ethicality: Examining Airbnb and housings’ adherence to data protection laws and regulations offers an academic lens to evaluate the company's legal ethicality. Scholars may explore instances of compliance or non-compliance, contributing to a nuanced understanding of the platform's ethical standing within legal frameworks.

Cultural Sensitivity and Global Impact: The global reach of both short-term and long-term housing necessitates an examination of cultural sensitivity. Ethical considerations should encompass the platform's responsiveness to diverse cultural norms, laws, and societal expectations across different regions.

Algorithmic Transparency and Bias: Airbnb's use of algorithms for personalized recommendations, pricing, and other features introduces ethical considerations related to transparency and potential biases. Researchers should explore the opacity of these algorithms and investigate whether they inadvertently perpetuate discrimination or exacerbate existing societal biases.

Data Security and Cybersecurity: The handling of extensive personal and financial data by Airbnb necessitates a robust examination of data security and cybersecurity measures. Ethical considerations involve assessing the adequacy of these measures to protect against potential data breaches and unauthorized access. A hacker could exploit information such as respondents’ IP address and visited sites for nefarious purposes [16] [17].

User Trust and Accountability: Trust is foundational to the success of platforms like Airbnb. Researchers should explore how the company establishes and maintains user trust through ethical practices. Additionally, academic scrutiny can focus on mechanisms of accountability in cases of disputes, ensuring fairness and justice in conflict resolution.


## 6. With reference to the data (*i.e.* using numbers, figures, maps, and descriptive statistics), what does an analysis of Hosts and Listing types suggest about the nature of Airbnb lets in London? 

By wrangling and filtering out the Airbnb listings that are out of our research scope (which we will clarify in Question 7), we have found that there are 3756 observations in this dataset. First, we have conducted descriptive statistics analyses based on our Airbnb dataset. Our main findings are as below:

Price
The average nightly price of £161.58 masks a vast range, with listings spanning from £8 to £20,362. This variance reflects the diverse offerings within Airbnb, catering to varied budgets and travel styles in London. The standard deviation of £421.86 further highlights the significant spread, hinting at the potential influence of factors of location, amenities, and seasonality.

Property Preference
There are 46 unique types of property listed according to our dataset, which provides short-term renters a comprehensive choice of listings. With 1,143 entire rental units, a clear preference for renting out full apartments or houses dominates the market. This choice may aligns with travelers' desire for autonomy and privacy during their stay, while one the other hand, it may resonate with hosts seeking greater potential income compared to shared spaces.

Boroughs
The spatial distribution of Airbnb listings reveals a distinct concentration in Lambeth, which boasts the highest number (275) across the three years. This contrasts sharply with the City of London's mere 6 listings. This disparity likely stems from a combination of factors. Lambeth's larger landmass provides more housing options suitable for short-term rentals, while its vicinity to popular tourist destinations like Westminster Abbey and Buckingham Palace further fuels demand.

Next, we have created a heatmap that demonstrates the number of Airbnb listings by boroughs over 2016 to 2018. From the heatmap, we have obs98;93:484–5.

```{python}
import os
import pandas as pd
import numpy as np
import seaborn as sn
import geopandas as gpd
import matplotlib.pyplot as plt
from matplotlib.patches import Patch
```

```{python}
host = 'https://orca.casa.ucl.ac.uk'
path = '~jreades/data'
file = '2023-09-06-listings.csv.gz'
url  = f'{host}/{path}/{file}'

if os.path.exists(file):
  df = pd.read_csv(file, compression='gzip', low_memory=False)
else: 
  df = pd.read_csv(url, compression='gzip', low_memory=False)
  df.to_csv(file)
```

```{python}
#| jupyter: {outputs_hidden: true}
#load the aribnb dataset
airbnb_data = pd.read_csv("FSDS_data/listings.csv")
#load the rental market dataset
housing_data = pd.read_csv('FSDS_data/housing_data.csv',skiprows=2)
#load the geo-spatial data
london_geodata=gpd.read_file('FSDS_data/neighbourhoods.geojson')
```

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(50, 8))
sns.boxplot(x='property_type',
            y='price',
            data=airbnb_data[airbnb_data.price <= 1000],
            color='orange'
            )
plt.ylabel('Airbnb Daily Price (Unit: Pounds)')
plt.xlabel('Airbnb Property Type')
plt.title("Boxplot of Airbnb Daily Price~property Type", y=1.02)
plt.xticks(rotation=45)
plt.savefig('Boxplot_Price~PropertyType.png', bbox_inches='tight')
plt.show() # Double click the graph to zoom in if it is too small
```

```{python}
# Filter out the columns
columns_to_keep = ['host_total_listings_count','host_is_superhost','description', 'host_since', 'host_identity_verified', 'neighbourhood_cleansed', 'latitude', 'longitude', 'property_type', 'bathrooms_text', 'bedrooms', 'beds', 'number_of_reviews', 'price', 'availability_365']
airbnb_data = airbnb_data[columns_to_keep]

# Filter the data to include only listings that are available
airbnb_data = airbnb_data[airbnb_data['availability_365'] > 0]

#select the numerical columns
numerical_columns = ['host_total_listings_count','price', 'host_since', 'bedrooms', 'beds','latitude','longitude']

# Calculate descriptive statistics for categorical columns
categorical_columns = ['description','property_type', 'host_identity_verified','neighbourhood_cleansed','number_of_reviews','bathrooms_text']



# as we have price saved as a format like $130,000.00 so we need to deal with the '$' and ',' to convert it to numeric
airbnb_data['price'] = airbnb_data['price'].str.replace('$','', regex=False).str.replace(',','').astype('float')
#convert host_since to the date format 
airbnb_data['host_since'] = pd.to_datetime(airbnb_data['host_since'])

#define the property types which we won't use 
exclude_types = ['Boat', 'Camper/RV', 'Houseboat', 'Religious building', 'Room in aparthotel']
#select the property type
airbnb_data = airbnb_data[~airbnb_data['property_type'].isin(exclude_types)]

# Define the start and end date for the period
start_date = pd.to_datetime('2016-01-01')
end_date = pd.to_datetime('2018-12-31')

# Filter the DataFrame for rows where the host_since falls within the specified range(2016-2018)
airbnb_data = airbnb_data[(airbnb_data['host_since'] >= start_date) & (airbnb_data['host_since'] <= end_date)]

#only need the airbnb_data which host_listings is less than two
airbnb_data = airbnb_data[airbnb_data['host_total_listings_count']<2]

#check whether the columns in numerical_columns is numerical or not
for column in numerical_columns:
    if column in airbnb_data.columns:
        print(f"Data type of '{column}': {airbnb_data[column].dtype}")
        if pd.api.types.is_numeric_dtype(airbnb_data[column]):
            print(f"{column} is numeric.")
        else:
            print(f"{column} is not numeric.")
    else:
        print(f"{column} is not in the DataFrame.")
```

```{python}
print(airbnb_data.shape)
na_count = airbnb_data.isna().sum()
#calculate na for each column
print(na_count)
```

```{python}
na_count = london_geodata.isna().sum()
#check na for london geo-spatial data
print(na_count)
```

```{python}
#drop the empty column
london_geodata = london_geodata.dropna(axis=1)
```

```{python}
print(housing_data.shape)
na_count =housing_data.isna().sum()
#calculate na for each column
print(na_count)
```

```{python}
# write the descriptive statistics into a txt file which seems to be easy for analysis

for column in numerical_columns:
    print(f"Descriptive statistics for {column}:")
    print(str(airbnb_data[column].describe()))
     

for column in categorical_columns:
    print(f"Unique values for {column}:\n")
    print(str(airbnb_data[column].value_counts()))
        
```

```{python}
"""
===
For the descriptive statistics for LTL Data
===
"""
#actually we don't have na in our housing dataset but we have symbol . instead which fill in the empty cell
#set a boolean mask to remove these dots
mask_dot = (housing_data == '.').any(axis=1)
mask_comma = (housing_data == ',').any(axis=1)
mask_double_dot = (housing_data == '..').any(axis=1)

# Combine the masks
combined_mask = mask_dot | mask_comma | mask_double_dot

# Filter the DataFrame
housing_data = housing_data[~combined_mask]
# Filter out the columns
condition = (
    (housing_data['Year'] >= 2016) &
    (housing_data['Year'] <= 2018))

housing_data = housing_data[condition]


#select the category for housing data as we only focus on room
housing_data=housing_data[housing_data['Category']=='Room']


#Descriptive statistics for 'Count of rents
print("Descriptive statistics for 'Count of rents':")
print(str(housing_data['Count of rents'].describe()))

#Descriptive statistics for 'Average
print("Descriptive statistics for 'Average':")
print(str(housing_data['Average'].describe()))
    
# Value counts for 'Area'
print("Value counts for 'Area':")
print(str(housing_data['Area'].value_counts()))
   

# Value counts for 'Category'
print("Value counts for 'Category':")
print(str(housing_data['Category'].value_counts()))
```

```{python}
#convert the average variable of housing data to float type
housing_data['Average'] = housing_data['Average'].str.replace(',','').astype('float')
housing_data['Count of rents'] = housing_data['Count of rents'].astype(str)
housing_data['Count of rents'] = housing_data['Count of rents'].str.replace(',', '').astype('float')
```

```{python}
# Extract the year from 'host_since' and create a new 'year' column format like 2011 from 2011-01-01
airbnb_data['year'] = airbnb_data['host_since'].dt.year

# select entire rental unit only as we'll focus on it 
df_properties = airbnb_data[airbnb_data['property_type'] == 'Entire rental unit']

# Group and calculate average price by region and year
grouped_data = df_properties.groupby(['neighbourhood_cleansed', 'year'])['price'].mean().reset_index()

# Pivot the data to have years as columns and regions as rows
pivoted_data = grouped_data.pivot(index='neighbourhood_cleansed', columns='year', values='price')

# Merge the GeoDataFrame with the pivoted data only once
gdf = london_geodata.merge(pivoted_data, how='left', left_on='neighbourhood', right_index=True)

# Specify the year spell as we are focus on 2016-2018
years = [2016, 2017, 2018]
legend_handle = [Patch(facecolor='lightgrey', edgecolor='lightgrey', label='No Entire Rental Unit in this borough')]
# Set up the figure for subplots
fig, axs = plt.subplots(len(years), 1, figsize=(14, 10 * len(years)))  

for i, year in enumerate(years):
    # Plot the choropleth map for each year
    ax = axs[i]
    gdf.plot(column=year, ax=ax, legend=True,
             legend_kwds={'label': "Airbnb Average Daily Price", 'orientation': "vertical"},
             cmap='viridis',  # Choose a colormap that matches your data
             missing_kwds={'color': 'lightgrey'})  # Color for missing values
    ax.set_title(f'Average price by region for Entire rental unit in {year}')
    ax.axis('off')  # Remove axis for clarity
    axs[i].legend(handles=legend_handle, loc='lower right', fontsize='large')

plt.tight_layout(pad=3.0)
plt.show()
```

```{python}
grouped_data = airbnb_data.groupby(['neighbourhood_cleansed', 'year']).size().reset_index(name='count')
# Pivot the data to have years as columns and regions as rows
pivoted_data = grouped_data.pivot(index='neighbourhood_cleansed', columns='year', values='count')

fig, axs = plt.subplots(len(years), 1, figsize=(14, 10 * len(years))) 
legend_handle = [Patch(facecolor='lightgrey', edgecolor='lightgrey', label='No Entire Rental Unit in this borough')]
for i, year in enumerate(years):
    # Plot the choropleth map for each year
    ax = axs[i]
    gdf.plot(column=year, ax=ax, legend=True,
             legend_kwds={'label': "Number of Airbnb Entire Rental Unit", 'orientation': "vertical"},
             cmap='viridis',  
             missing_kwds={'color': 'lightgrey'})  
    ax.set_title(f'Count of Airbnb Entire Rental Unit in {year}')
    ax.axis('off')  #
    # add the legend for demonstrating the gray patch representing no value in that area
    axs[i].legend(handles=legend_handle, loc='lower right', fontsize='large')

plt.tight_layout(pad=3.0)
# plt.savefig('airbnb_listings_count_map.png', dpi=600) 
plt.show()
```

```{python}
housing_data_filter=housing_data[housing_data['Year']==2017]
# Group by 'Area' and 'Year' actually for one borough there is only one average at all but we still use the mean here
#in case if there are two or more average data for one borough if it's one the mean will be itself so doesn't affect us
grouped_data = housing_data_filter.groupby(['Area', 'Year'])['Average'].mean().reset_index()

# Pivot the data to have years as columns and areas as rows
pivoted_data = grouped_data.pivot(index='Area', columns='Year', values='Average')

fig, ax = plt.subplots(figsize=(14, 10))

gdf.plot(column=2017, ax=ax, legend=True,
         legend_kwds={'label': "Average Hosuing Price in 2017(Unit:Pound)", 'orientation': "vertical"},
         cmap='magma', missing_kwds={'color': 'lightgrey'})

ax.set_title(f'Housing Average Price for 2017')
ax.axis('off')

# Add legend for missing data
legend_handle = [Patch(facecolor='lightgrey', edgecolor='lightgrey', label='No Data for this Borough')]
ax.legend(handles=legend_handle, loc='lower right', fontsize='large')

plt.tight_layout(pad=3.0)
# plt.savefig('housing_price_map_2017.png', dpi=600)
plt.show()
```

```{python}
# Group by 'Area' and 'Year' actually for one borough there is only one average at all but we still use the mean here
#in case if there are two or more average data for one borough if it's one the mean will be itself so doesn't affect us
grouped_data = housing_data_filter.groupby(['Area', 'Year'])['Count of rents'].mean().reset_index()

# Pivot the data to have years as columns and areas as rows
pivoted_data = grouped_data.pivot(index='Area', columns='Year', values='Count of rents')


fig, ax = plt.subplots(figsize=(14, 10))


gdf.plot(column=2017, ax=ax, legend=True,
         legend_kwds={'label': "Count of Housing in 2017", 'orientation': "vertical"},
         cmap='cividis', missing_kwds={'color': 'lightgrey'})

ax.set_title(f'Housing Count in 2017')
ax.axis('off')

# Add legend for missing data
legend_handle = [Patch(facecolor='lightgrey', edgecolor='lightgrey', label='No Data for this Borough')]
ax.legend(handles=legend_handle, loc='lower right', fontsize='large')

plt.tight_layout(pad=3.0)
# plt.savefig('housing_count_map_2017.png', dpi=600)
plt.show()
```


## 7. Drawing on your previous answers, and supporting your response with evidence (e.g. figures, maps, and statistical analysis/models), how *could* this data set be used to inform the regulation of Short-Term Lets (STL) in London? 

Our study aims to research if a heavier sales tax policy implemented on Airbnb hosts who have one listing in London, would the number and rental price of long-term housing decrease, whilst taking into consideration of the following influential factors:
1.	Temporal scope: We restricted our analysis to the period January 2016 to December 2018, as this timeframe encompasses the most recent available data for both short-term and long-term rental listings in London.
2.	Listing Availability: We limited our analysis to active, available Airbnb listings, ensuring that the data reflects the current state of the short-term rental market.
3.	Host Ownership: We confined our examination to Airbnb hosts who exclusively own one single short-term Airbnb listing in London. Since London’s current sales tax policy only applies to hosts who own two or more short-term Airbnb listings, we shall focus on hosts with one single listing specifically. 
4.	Housing Type: Other housing types aside from entire house/apt, e.g. hotel rooms or private rooms, cannot be transitioned into long-term listings, consequently having no impact on the quantity and pricing of long-term listings.

By applying the findings of ‘Does Room Sharing Disrupt Housing Markets? Empirical Evidence From Airbnb in Taiwan’ for the case of London, using a difference-in-difference (multiple regression) approach suggested by Chen et al. (2020) and the models of Taiwan, it assess that as each standard deviation increase in the number of Airbnb listings, it raises house rental prices by 0.38%. Therefore, we assume that by controlling the heterogenity factors between london and Taiwan (except amenities, spatial variations and external socio-economic factors etc.), we assume that 





## References

[1] Benítez-Aurioles, B. (2020), “Impacts of the peer-to-peer market on tourist accommodation on the Balearic islands of Mallorca and Menorca”, Island Studies Journal, Vol. 15 No. 2, pp. 353-370.

[2] Lehr, Dean D., An Analysis of the Changing Competitive Landscape in the Hotel Industry Regarding Airbnb, 2015, https://doi.org/10.33015/dominican.edu/2015. bus.01. 

[3] insideairbnb.com. (n.d.). About. [online] Available at: http://insideairbnb.com/about/.

[4] insideairbnb.com. (n.d.). Data Policies. [online] Available at: http://insideairbnb.com/data-policies.

[5] Alsudais, A. (2021). Incorrect data in the widely used Inside Airbnb dataset. Decision Support Systems, 141, 113453-. https://doi.org/10.1016/j.dss.2020.113453

[6] Prentice, C. and Pawlicz, A. (2023). Addressing data quality in Airbnb research. International Journal of Contemporary Hospitality Management. doi:https://doi.org/10.1108/ijchm-10-2022-1207, https://www.emerald.com/insight/0959-6119.htm.

[7] Van Holm, E. J., & Monaghan, J. (2021). The relationship of Airbnb to neighborhood calls for service in three cities. Cities, 116, 103241-. https://doi.org/10.1016/j.cities.2021.103241

[8] N. Gurran, P. Phibbs, When tourists move in: how should urban planners respond to Airbnb? J. Am. Plan. Assoc. 83 (2017) 80–92, https://doi.org/10.1080 
01944363.2016.124901.

[9] A. Alsudais, quantifying the offline interactions between hosts and guests o 
Airbnb, in: Twenty-Third Am. Conf. Inf. Syst., Boston, 201.

[10] N. Gurran, Y. Zhang, P. Shrestha, “Pop-up” tourism or “invasion”? Airbnb in coastal Australia, Ann. Tour. Res. 81 (2020), https://doi.org/10.1016/j.annals.2019.1028.

[11] Y. Cai, Y. Zhou, J. Ma, N. Scott, Price determinants of airbnb listings: evidece from Hong Kong, Tour. Anal. 24 (2019) 227–242, https://doi.org/10.327/108354219X1552505591

[12] Adamiak, C., Szyda, B., Dubownik, A., & García-Álvarez, D. (2019). Airbnb offer in Spain-Spatial analysis of the pattern and determinants of its distribution. ISPRS International Journal of Geo-Informatio.

[13] Colnerud, G. (2015). Ethical dilemmas in research in relation to ethical review: an empirical study, Research Ethics, Vol. 10 No. 4, pp. 238-253, doi: 10.1177/1747016114552339.

[14] Cilliers, L. and Viljieon, K. (2021). A framework of ethical issues to consider when conducting internet-based research, South African Journal of Information Management, ISSN: 1560-63x, 2078-1865.

[15] Pastore M. The world’s online populations. (2001). CyberAtlas com 24 Aug 2001, Available at: http://cyberatlas.internet.com/big_picture/geographics/article/0,1323,5911_151151,00.html (Accessed 17 Sep 2001).

[16]Kushi LH, Finnegan J, Martinson B, et al. (1997) Epidemiology and the internet. Epidemiology 1997;8:689–90.

[17]Hilsden RJ, Scott CM, Verhoef MJ. (1998). Research and the Internet. Am J Gastroenterol 1998;93:484–5.
